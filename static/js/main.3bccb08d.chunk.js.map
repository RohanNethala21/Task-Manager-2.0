{"version":3,"sources":["styles/GlobalStyles.js","contexts/AuthContext.js","contexts/TaskContext.js","contexts/ThemeContext.js","components/ui/ThemeToggle.js","components/layout/Navbar.js","components/layout/Navigation.js","components/layout/Footer.js","components/pages/Login.js","components/pages/Register.js","components/pages/Dashboard.js","components/pages/Tasks.js","components/pages/Productivity.js","components/pages/Settings.js","components/pages/Account.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","props","theme","colors","background","text","cardBackground","border","AuthContext","createContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","useState","user","setUser","loading","setLoading","users","setUsers","useEffect","checkLoggedIn","userData","localStorage","getItem","JSON","parse","registeredUsers","setItem","stringify","React","createElement","Provider","value","register","name","email","password","some","success","message","newUser","id","Date","now","role","createdAt","toISOString","updatedUsers","login","foundUser","find","logout","removeItem","useAuth","useContext","TaskContext","TaskProvider","tasks","setTasks","loadTasks","savedTasks","sampleTasks","title","category","dueDate","priority","completed","subtasks","points","addTask","task","newTask","deleteTask","taskId","filter","toggleTaskCompletion","map","subtask","editTask","updatedTask","addSubtask","newSubtask","deleteSubtask","subtaskId","toggleSubtaskCompletion","updatedSubtasks","allSubtasksCompleted","length","every","editSubtask","updatedSubtask","getTotalTasksCount","getCompletionPercentage","completedTasks","Math","round","getTotalPoints","reduce","total","useTask","ThemeContext","ThemeProvider","themeMode","setThemeMode","primary","secondary","warning","highPriority","lightGray","darkGray","fonts","main","breakpoints","mobile","tablet","desktop","largeDesktop","toggleTheme","prevMode","useTheme","ToggleContainer","styled","div","ToggleLabel","span","ToggleSwitch","label","ToggleInput","input","ToggleSlider","ThemeIcon","ThemeToggle","type","checked","onChange","NavbarContainer","nav","NavbarContent","Logo","Link","NavLinks","NavLink","active","UserSection","UserName","LogoutButton","button","MobileMenuButton","MobileMenu","isOpen","MobileNavLink","MobileLogoutButton","Navbar","location","window","mobileMenuOpen","setMobileMenuOpen","navigate","useNavigate","handleLogout","pathname","to","width","height","viewBox","fill","xmlns","x","y","onClick","toggleMobileMenu","NavContainer","NavList","ul","NavItem","li","NavLinkStyled","Navigation","useLocation","d","FooterContainer","footer","Copyright","p","FooterLinks","FooterLink","Footer","currentYear","getFullYear","LoginContainer","LoginHeader","header","LogoContainer","LoginContent","LoginBox","LoginForm","form","LoginImage","FormGroup","Label","Input","CheckboxContainer","Checkbox","LoginButton","RegisterLink","ErrorMessage","LoginFooter","FooterContent","FooterLogo","a","Login","setEmail","setPassword","rememberMe","setRememberMe","error","setError","onSubmit","e","preventDefault","result","style","textAlign","marginBottom","htmlFor","target","margin","stroke","strokeWidth","href","RegisterContainer","RegisterHeader","RegisterContent","RegisterBox","RegisterForm","RegisterImage","RegisterButton","LoginLink","SuccessMessage","RegisterFooter","Register","setName","confirmPassword","setConfirmPassword","setSuccess","setTimeout","DashboardContainer","WelcomeSection","WelcomeTitle","h1","WelcomeSubtitle","TaskOverviewSection","SectionTitle","h2","StatsContainer","StatCard","StatIcon","bgColor","StatContent","StatTitle","StatValue","TasksSection","TaskList","TaskItem","TaskEmoji","TaskDetails","TaskName","TaskDueDate","TaskPriority","level","DeadlinesSection","ProductivitySection","ProductivityContainer","ProductivityCard","ProductivityTitle","ProductivityValue","ProductivitySubtitle","Dashboard","setCompletedTasks","totalPoints","setTotalPoints","overdueTasks","setOverdueTasks","upcomingDeadlines","setUpcomingDeadlines","activeTasks","setActiveTasks","today","setHours","overdue","nextWeek","setDate","getDate","upcoming","sort","b","slice","priorityOrder","high","medium","low","priorityDiff","formatDate","dateString","toLocaleDateString","month","day","year","key","getTaskEmoji","aria-label","isOverdue","TasksContainer","TasksHeader","TasksTitle","TasksSubtitle","SearchContainer","SearchInput","AddTaskButton","TaskListSection","TaskCardsContainer","TaskCard","TaskCheckbox","TaskContent","TaskTitle","h3","TaskCategory","TaskActions","ActionButton","AddNewTaskSection","TaskForm","FormRow","Select","select","CategoryOptions","CategoryOption","selected","SubmitButton","FiltersSection","FiltersContainer","FilterCard","FilterTitle","FilterOptions","FilterOption","NoTasksMessage","Tasks","showAddTaskForm","setShowAddTaskForm","showEditTaskForm","setShowEditTaskForm","setNewTask","editingTask","setEditingTask","searchTerm","setSearchTerm","setFilter","handleInputChange","handleEditInputChange","handleCategorySelect","handleEditCategorySelect","filteredTasks","toLowerCase","includes","placeholder","handleAddTaskClick","alert","handleEditTaskClick","fontWeight","ProductivityHeader","SummarySection","SummaryHeader","SummarySubtitle","ViewDetailsButton","SummaryCards","SummaryCard","CardTitle","CardValue","VisualDataSection","VisualDataHeader","ExportButton","ChartsContainer","ChartCard","ChartTitle","ChartSubtitle","ChartContainer","BarChartPlaceholder","BarItem","PieChartPlaceholder","completionPercentage","ChartLegend","LegendItem","LegendColor","color","PointsSection","PointsCard","PointsHeader","PointsTitle","PointsValue","PointsTable","PointsRow","PointsLabel","PointsAmount","Productivity","totalTasks","setTotalTasks","setCompletionPercentage","streak","setStreak","calculateStreak","useCallback","min","floor","tasksByCategory","getTasksByCategory","categories","forEach","Object","keys","index","SettingsContainer","ProfileSection","ProfileInfo","ProfileAvatar","ProfileDetails","ProfileName","ProfileEmail","ProfileActions","ProfileButton","ThemesSection","ThemeDescription","ThemeOptions","ThemeCard","ThemeDetails","ThemeTitle","ThemeSubtitle","CustomThemeSection","ThemeSettingsSection","ColorPickersContainer","ColorPickerGroup","ColorPickerLabel","ColorPickerDescription","ColorPickerInput","ButtonsContainer","Button","Settings","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","defaultProps","AccountContainer","ProfileDescription","SectionDescription","AccountSettingsSection","SettingsForm","FormLabel","FormInput","RadioGroup","RadioOption","RadioInput","RadioLabel","RemindersDescription","SaveButton","DangerZoneSection","DangerZoneContainer","DangerZoneHeader","DangerIcon","DangerTitle","DangerDescription","DangerActions","CancelButton","DeleteButton","Account","emailReminders","setEmailReminders","ProtectedRoute","Navigate","replace","AppWithTheme","StyledThemeProvider","Router","className","Routes","Route","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bccb08d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    transition: background-color 0.3s ease, color 0.3s ease;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Roboto', sans-serif;\r\n    background-color: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.text};\r\n    line-height: 1.5;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    border: none;\r\n    outline: none;\r\n    background: none;\r\n    font-family: inherit;\r\n  }\r\n\r\n  input, textarea {\r\n    font-family: inherit;\r\n    outline: none;\r\n    background-color: ${props => props.theme.colors.cardBackground};\r\n    color: ${props => props.theme.colors.text};\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n  }\r\n\r\n  .app {\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n  }\r\n\r\n  .main-content {\r\n    flex: 1;\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6 {\r\n    margin-bottom: 1rem;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 1rem;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // Here we check if user is already logged in (from localStorage)\r\n  useEffect(() => {\r\n    const checkLoggedIn = () => {\r\n      const userData = localStorage.getItem('taskManagerUser');\r\n      if (userData) {\r\n        setUser(JSON.parse(userData));\r\n        setIsAuthenticated(true);\r\n      }\r\n      \r\n      // Here we load registered users\r\n      const registeredUsers = localStorage.getItem('taskManagerUsers');\r\n      if (registeredUsers) {\r\n        setUsers(JSON.parse(registeredUsers));\r\n      } else {\r\n        \r\n        localStorage.setItem('taskManagerUsers', JSON.stringify([]));\r\n        setUsers([]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n    \r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  const register = (name, email, password) => {\r\n    // Here we check if email already exists\r\n    if (users.some(user => user.email === email)) {\r\n      return { success: false, message: 'Email already registered' };\r\n    }\r\n    \r\n    // Here this will make a new user\r\n    const newUser = {\r\n      id: Date.now(),\r\n      name,\r\n      email,\r\n      password, \r\n      role: 'user',\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    // Now we add the user to the users array\r\n    const updatedUsers = [...users, newUser];\r\n    localStorage.setItem('taskManagerUsers', JSON.stringify(updatedUsers));\r\n    setUsers(updatedUsers);\r\n    \r\n    // Here we allow for auto login after registration\r\n    localStorage.setItem('taskManagerUser', JSON.stringify(newUser));\r\n    setUser(newUser);\r\n    setIsAuthenticated(true);\r\n    \r\n    return { success: true };\r\n  };\r\n\r\n  // This is our Login function\r\n  const login = (email, password) => {\r\n    \r\n    const foundUser = users.find(user => user.email === email && user.password === password);\r\n    \r\n    if (foundUser) {\r\n      localStorage.setItem('taskManagerUser', JSON.stringify(foundUser));\r\n      setUser(foundUser);\r\n      setIsAuthenticated(true);\r\n      return { success: true };\r\n    }\r\n    \r\n    return { success: false, message: 'Invalid email or password' };\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('taskManagerUser');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      isAuthenticated, \r\n      user, \r\n      loading, \r\n      users,\r\n      register,\r\n      login, \r\n      logout \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Here is where we add proptypes validation\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n// This is just a custom hook to use auth context\r\nexport const useAuth = () => useContext(AuthContext);","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskContext = createContext();\r\n\r\nexport const TaskProvider = ({ children }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadTasks = () => {\r\n      const savedTasks = localStorage.getItem('taskManagerTasks');\r\n      if (savedTasks) {\r\n        setTasks(JSON.parse(savedTasks));\r\n      } else {\r\n        const sampleTasks = [\r\n          {\r\n            id: 1,\r\n            title: 'Complete Project Proposal',\r\n            category: 'Work',\r\n            dueDate: '2025-04-15',\r\n            priority: 'high',\r\n            completed: false,\r\n            subtasks: [\r\n              {\r\n                id: 101,\r\n                title: 'Research competitors',\r\n                completed: true\r\n              },\r\n              {\r\n                id: 102,\r\n                title: 'Draft executive summary',\r\n                completed: false\r\n              }\r\n            ],\r\n            points: 10\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Schedule Doctor Appointment',\r\n            category: 'Personal',\r\n            dueDate: '2025-03-25',\r\n            priority: 'medium',\r\n            completed: false,\r\n            subtasks: [],\r\n            points: 5\r\n          },\r\n          {\r\n            id: 3,\r\n            title: 'Finish Reading Book',\r\n            category: 'Personal',\r\n            dueDate: '2025-04-01',\r\n            priority: 'low',\r\n            completed: true,\r\n            subtasks: [\r\n              {\r\n                id: 301,\r\n                title: 'Read chapters 1-5',\r\n                completed: true\r\n              },\r\n              {\r\n                id: 302,\r\n                title: 'Read chapters 6-10',\r\n                completed: true\r\n              }\r\n            ],\r\n            points: 3\r\n          },\r\n        ];\r\n        setTasks(sampleTasks);\r\n        localStorage.setItem('taskManagerTasks', JSON.stringify(sampleTasks));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    \r\n    loadTasks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      localStorage.setItem('taskManagerTasks', JSON.stringify(tasks));\r\n    }\r\n  }, [tasks, loading]);\r\n\r\n  const addTask = (task) => {\r\n    const newTask = {\r\n      ...task,\r\n      id: Date.now(), \r\n      completed: false,\r\n      subtasks: [],\r\n      points: task.priority === 'high' ? 10 : task.priority === 'medium' ? 5 : 3\r\n    };\r\n    \r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks(tasks.filter(task => task.id !== taskId));\r\n  };\r\n\r\n  const toggleTaskCompletion = (taskId) => {\r\n    setTasks(tasks.map(task => {\r\n      if (task.id === taskId) {\r\n        // If marking as complete, also mark all subtasks as complete\r\n        if (!task.completed) {\r\n          return { \r\n            ...task, \r\n            completed: true,\r\n            subtasks: task.subtasks.map(subtask => ({\r\n              ...subtask,\r\n              completed: true\r\n            }))\r\n          };\r\n        } else {\r\n          return { ...task, completed: false };\r\n        }\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  const editTask = (taskId, updatedTask) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === taskId ? { ...task, ...updatedTask } : task\r\n    ));\r\n  };\r\n\r\n  // Here we add a subtask to a task\r\n  const addSubtask = (taskId, subtask) => {\r\n    setTasks(tasks.map(task => {\r\n      if (task.id === taskId) {\r\n        const newSubtask = {\r\n          ...subtask,\r\n          id: Date.now(),\r\n          completed: false\r\n        };\r\n        return {\r\n          ...task,\r\n          subtasks: [...task.subtasks, newSubtask]\r\n        };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  // This part is for deleting a subtask\r\n  const deleteSubtask = (taskId, subtaskId) => {\r\n    setTasks(tasks.map(task => {\r\n      if (task.id === taskId) {\r\n        return {\r\n          ...task,\r\n          subtasks: task.subtasks.filter(subtask => subtask.id !== subtaskId)\r\n        };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  // Here we toggle whether a subtask was completed or not\r\n  const toggleSubtaskCompletion = (taskId, subtaskId) => {\r\n    setTasks(tasks.map(task => {\r\n      if (task.id === taskId) {\r\n        const updatedSubtasks = task.subtasks.map(subtask => \r\n          subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask\r\n        );\r\n        \r\n        // Then we check if all subtasks are completed\r\n        const allSubtasksCompleted = updatedSubtasks.length > 0 && \r\n          updatedSubtasks.every(subtask => subtask.completed);\r\n        \r\n        return {\r\n          ...task,\r\n          subtasks: updatedSubtasks,\r\n          // If all subtasks are completed, mark the main task as completed too\r\n          completed: allSubtasksCompleted\r\n        };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  // Here we edit a subtask\r\n  const editSubtask = (taskId, subtaskId, updatedSubtask) => {\r\n    setTasks(tasks.map(task => {\r\n      if (task.id === taskId) {\r\n        return {\r\n          ...task,\r\n          subtasks: task.subtasks.map(subtask => \r\n            subtask.id === subtaskId ? { ...subtask, ...updatedSubtask } : subtask\r\n          )\r\n        };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  // Here we calculate total tasks count\r\n  const getTotalTasksCount = () => {\r\n    return tasks.length;\r\n  };\r\n\r\n  // Then we calculate completed tasks percentage\r\n  const getCompletionPercentage = () => {\r\n    if (tasks.length === 0) return 0;\r\n    \r\n    const completedTasks = tasks.filter(task => task.completed).length;\r\n    return Math.round((completedTasks / tasks.length) * 100);\r\n  };\r\n\r\n  // Finally, we calculate total points earned\r\n  const getTotalPoints = () => {\r\n    return tasks\r\n      .filter(task => task.completed)\r\n      .reduce((total, task) => total + (task.points || 0), 0);\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={{ \r\n      tasks, \r\n      loading, \r\n      addTask, \r\n      deleteTask, \r\n      toggleTaskCompletion, \r\n      editTask,\r\n      addSubtask,\r\n      deleteSubtask,\r\n      toggleSubtaskCompletion,\r\n      editSubtask,\r\n      getTotalTasksCount,\r\n      getCompletionPercentage,\r\n      getTotalPoints\r\n    }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\n// Here we add PropTypes validation\r\nTaskProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport const useTask = () => useContext(TaskContext);","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Here we check if theme preference exists in localStorage, default to 'light'\r\n  const [themeMode, setThemeMode] = useState(() => {\r\n    const savedTheme = localStorage.getItem('taskManagerTheme');\r\n    return savedTheme || 'light';\r\n  });\r\n\r\n  // Here we save theme preference to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('taskManagerTheme', themeMode);\r\n  }, [themeMode]);\r\n\r\n  // Here the toggle between light and dark mode is defined\r\n  const toggleTheme = () => {\r\n    setThemeMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  // Here we define theme objects for light and dark modes\r\n  const lightTheme = {\r\n    colors: {\r\n      primary: '#000000',\r\n      secondary: '#ffffff',\r\n      background: '#f5f5f5',\r\n      cardBackground: '#ffffff',\r\n      success: '#4CAF50',\r\n      warning: '#FF5252',\r\n      highPriority: '#FFC107',\r\n      text: '#333333',\r\n      lightGray: '#e0e0e0',\r\n      darkGray: '#757575',\r\n      border: '#e0e0e0'\r\n    },\r\n    fonts: {\r\n      main: \"'Roboto', sans-serif\"\r\n    },\r\n    breakpoints: {\r\n      mobile: '576px',\r\n      tablet: '768px',\r\n      desktop: '992px',\r\n      largeDesktop: '1200px'\r\n    }\r\n  };\r\n\r\n  const darkTheme = {\r\n    colors: {\r\n      primary: '#BB86FC', \r\n      secondary: '#121212',\r\n      background: '#121212', \r\n      cardBackground: '#1E1E1E',\r\n      success: '#4CAF50',\r\n      warning: '#FF5252',\r\n      highPriority: '#FFC107',\r\n      text: '#E1E1E1', \r\n      lightGray: '#333333',\r\n      darkGray: '#BBBBBB', \r\n      border: '#333333'\r\n    },\r\n    fonts: {\r\n      main: \"'Roboto', sans-serif\"\r\n    },\r\n    breakpoints: {\r\n      mobile: '576px',\r\n      tablet: '768px',\r\n      desktop: '992px',\r\n      largeDesktop: '1200px'\r\n    }\r\n  };\r\n\r\n  // Here we select the appropriate theme based on themeMode\r\n  const theme = themeMode === 'light' ? lightTheme : darkTheme;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, themeMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Here we add PropTypes validation\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\n\r\nconst ToggleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst ToggleLabel = styled.span`\r\n  margin-right: 8px;\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst ToggleSwitch = styled.label`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 24px;\r\n`;\r\n\r\nconst ToggleInput = styled.input`\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n  \r\n  &:checked + span {\r\n    background-color: ${props => props.theme.colors.primary};\r\n  }\r\n  \r\n  &:checked + span:before {\r\n    transform: translateX(26px);\r\n  }\r\n`;\r\n\r\nconst ToggleSlider = styled.span`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: ${props => props.theme.colors.lightGray};\r\n  transition: 0.4s;\r\n  border-radius: 34px;\r\n  \r\n  &:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 16px;\r\n    width: 16px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    transition: 0.4s;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst ThemeIcon = styled.span`\r\n  margin-left: 8px;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst ThemeToggle = () => {\r\n  const { themeMode, toggleTheme } = useTheme();\r\n  \r\n  return (\r\n    <ToggleContainer>\r\n      <ToggleLabel>Theme</ToggleLabel>\r\n      <ToggleSwitch>\r\n        <ToggleInput \r\n          type=\"checkbox\" \r\n          checked={themeMode === 'dark'}\r\n          onChange={toggleTheme}\r\n        />\r\n        <ToggleSlider />\r\n      </ToggleSwitch>\r\n      <ThemeIcon>\r\n        {themeMode === 'dark' ? '🌙' : '☀️'}\r\n      </ThemeIcon>\r\n    </ToggleContainer>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport ThemeToggle from '../ui/ThemeToggle';\r\n\r\nconst NavbarContainer = styled.nav`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  padding: 0 20px;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavbarContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 60px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  \r\n  svg {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst NavLinks = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  padding: 5px 10px;\r\n  color: ${props => props.theme.colors.text};\r\n  font-weight: ${props => props.active ? 'bold' : 'normal'};\r\n  border-bottom: ${props => props.active ? `2px solid ${props.theme.colors.primary}` : 'none'};\r\n  \r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst UserSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n`;\r\n\r\nconst UserName = styled.span`\r\n  font-weight: 500;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.theme.colors.text};\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  font-size: 1rem;\r\n  \r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst MobileMenuButton = styled.button`\r\n  display: none;\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst MobileMenu = styled.div`\r\n  display: ${props => props.isOpen ? 'block' : 'none'};\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  padding: 10px 0;\r\n  \r\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MobileNavLink = styled(Link)`\r\n  display: block;\r\n  padding: 15px 20px;\r\n  color: ${props => props.theme.colors.text};\r\n  font-weight: ${props => props.active ? 'bold' : 'normal'};\r\n  border-left: ${props => props.active ? `4px solid ${props.theme.colors.primary}` : 'none'};\r\n  padding-left: ${props => props.active ? '16px' : '20px'};\r\n  \r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst MobileLogoutButton = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  text-align: left;\r\n  padding: 15px 20px;\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.theme.colors.text};\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const location = window.location;\r\n  const [mobileMenuOpen, setMobileMenuOpen] = React.useState(false);\r\n  const { isAuthenticated, user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  const toggleMobileMenu = () => {\r\n    setMobileMenuOpen(!mobileMenuOpen);\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');\r\n  };\r\n  \r\n  // Only show navbar if not on login page and user is authenticated\r\n  const isLoginPage = location.pathname === '/' || location.pathname === '/login';\r\n  if (isLoginPage || !isAuthenticated) return null;\r\n  \r\n  return (\r\n    <NavbarContainer>\r\n      <NavbarContent>\r\n        <Logo to=\"/dashboard\">\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\" fill=\"black\" />\r\n          </svg>\r\n          Task Manager 2.0\r\n        </Logo>\r\n        \r\n        <NavLinks>\r\n          <NavLink to=\"/dashboard\" active={location.pathname === '/dashboard' ? 1 : 0}>Dashboard</NavLink>\r\n          <NavLink to=\"/tasks\" active={location.pathname === '/tasks' ? 1 : 0}>Tasks</NavLink>\r\n          <NavLink to=\"/productivity\" active={location.pathname === '/productivity' ? 1 : 0}>Productivity</NavLink>\r\n          <NavLink to=\"/settings\" active={location.pathname === '/settings' ? 1 : 0}>Settings</NavLink>\r\n          <NavLink to=\"/account\" active={location.pathname === '/account' ? 1 : 0}>Account</NavLink>\r\n        </NavLinks>\r\n        \r\n        <UserSection>\r\n          <ThemeToggle />\r\n          <UserName>Hello, {user?.name || 'User'}</UserName>\r\n          <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\r\n        </UserSection>\r\n        \r\n        <MobileMenuButton onClick={toggleMobileMenu}>\r\n          {mobileMenuOpen ? '✕' : '☰'}\r\n        </MobileMenuButton>\r\n      </NavbarContent>\r\n      \r\n      <MobileMenu isOpen={mobileMenuOpen}>\r\n        <MobileNavLink to=\"/dashboard\" active={location.pathname === '/dashboard' ? 1 : 0}>Dashboard</MobileNavLink>\r\n        <MobileNavLink to=\"/tasks\" active={location.pathname === '/tasks' ? 1 : 0}>Tasks</MobileNavLink>\r\n        <MobileNavLink to=\"/productivity\" active={location.pathname === '/productivity' ? 1 : 0}>Productivity</MobileNavLink>\r\n        <MobileNavLink to=\"/settings\" active={location.pathname === '/settings' ? 1 : 0}>Settings</MobileNavLink>\r\n        <MobileNavLink to=\"/account\" active={location.pathname === '/account' ? 1 : 0}>Account</MobileNavLink>\r\n        <MobileLogoutButton onClick={handleLogout}>Logout</MobileLogoutButton>\r\n      </MobileMenu>\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst NavContainer = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  \r\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst NavLinkStyled = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  color: ${props => props.active ? props.theme.colors.primary : props.theme.colors.darkGray};\r\n  font-weight: ${props => props.active ? 'bold' : 'normal'};\r\n  \r\n  svg {\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst Navigation = () => {\r\n  const location = useLocation();\r\n  \r\n  return (\r\n    <NavContainer>\r\n      <NavList>\r\n        <NavItem>\r\n          <NavLinkStyled to=\"/dashboard\" active={location.pathname === '/dashboard' ? 1 : 0}>\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\" fill=\"currentColor\"/>\r\n            </svg>\r\n            Dashboard\r\n          </NavLinkStyled>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLinkStyled to=\"/tasks\" active={location.pathname === '/tasks' ? 1 : 0}>\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" fill=\"currentColor\"/>\r\n            </svg>\r\n            Tasks\r\n          </NavLinkStyled>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLinkStyled to=\"/productivity\" active={location.pathname === '/productivity' ? 1 : 0}>\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z\" fill=\"currentColor\"/>\r\n            </svg>\r\n            Productivity\r\n          </NavLinkStyled>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLinkStyled to=\"/settings\" active={location.pathname === '/settings' ? 1 : 0}>\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\" fill=\"currentColor\"/>\r\n            </svg>\r\n            Settings\r\n          </NavLinkStyled>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLinkStyled to=\"/account\" active={location.pathname === '/account' ? 1 : 0}>\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" fill=\"currentColor\"/>\r\n            </svg>\r\n            Account\r\n          </NavLinkStyled>\r\n        </NavItem>\r\n      </NavList>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FooterContainer = styled.footer`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  padding: 20px;\r\n  text-align: center;\r\n  border-top: 1px solid ${props => props.theme.colors.border};\r\n  margin-top: auto;\r\n`;\r\n\r\nconst Copyright = styled.p`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.text};\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FooterLinks = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst FooterLink = styled(Link)`\r\n  color: ${props => props.theme.colors.text};\r\n  \r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  \r\n  return (\r\n    <FooterContainer>\r\n      <Copyright>© {currentYear} Task Manager 2.0 - All Rights Reserved</Copyright>\r\n      <FooterLinks>\r\n        <FooterLink to=\"/contact\">Contact Us</FooterLink>\r\n        <FooterLink to=\"/privacy\">Privacy Policy</FooterLink>\r\n        <FooterLink to=\"/terms\">Terms & Conditions</FooterLink>\r\n      </FooterLinks>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst LoginHeader = styled.header`\r\n  padding: 20px;\r\n  text-align: center;\r\n  border-bottom: 1px solid ${props => props.theme.colors.lightGray};\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  \r\n  svg {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst LoginContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst LoginBox = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  display: flex;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  flex: 1;\r\n  padding: 40px;\r\n  background-color: #f9f9f9;\r\n`;\r\n\r\nconst LoginImage = styled.div`\r\n  flex: 1;\r\n  background-color: #2196f3;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  img {\r\n    max-width: 80%;\r\n    height: auto;\r\n  }\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n  \r\n  &:hover {\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nconst RegisterLink = styled.p`\r\n  text-align: center;\r\n  \r\n  a {\r\n    color: ${props => props.theme.colors.primary};\r\n    font-weight: 500;\r\n    \r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  color: ${props => props.theme.colors.warning};\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst LoginFooter = styled.footer`\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border-top: 1px solid ${props => props.theme.colors.lightGray};\r\n`;\r\n\r\nconst FooterContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FooterLogo = styled.div`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FooterLinks = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst FooterLink = styled.a`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  \r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!email || !password) {\r\n      setError('Please enter both email and password');\r\n      return;\r\n    }\r\n    \r\n    const result = login(email, password);\r\n    \r\n    if (result.success) {\r\n      navigate('/dashboard');\r\n    } else {\r\n      setError(result.message || 'Invalid email or password');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <LoginContainer>\r\n      <LoginHeader>\r\n        <LogoContainer>\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\" fill=\"black\" />\r\n          </svg>\r\n          Task Manager 2.0\r\n        </LogoContainer>\r\n      </LoginHeader>\r\n      \r\n      <LoginContent>\r\n        <LoginBox>\r\n          <LoginForm onSubmit={handleSubmit}>\r\n            <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Login to Your Account</h2>\r\n            \r\n            <RegisterLink>\r\n              Don&apos;t have an account? <Link to=\"/register\">Register</Link>\r\n            </RegisterLink>\r\n            \r\n            {error && <ErrorMessage>{error}</ErrorMessage>}\r\n            \r\n            <FormGroup>\r\n              <Label htmlFor=\"email\">E-mail</Label>\r\n              <Input \r\n                type=\"email\" \r\n                id=\"email\" \r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <Input \r\n                type=\"password\" \r\n                id=\"password\" \r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <CheckboxContainer>\r\n              <Checkbox \r\n                type=\"checkbox\" \r\n                id=\"remember\" \r\n                checked={rememberMe}\r\n                onChange={(e) => setRememberMe(e.target.checked)}\r\n              />\r\n              <Label htmlFor=\"remember\" style={{ margin: 0 }}>Remember me</Label>\r\n            </CheckboxContainer>\r\n            \r\n            <LoginButton type=\"submit\">Log in</LoginButton>\r\n          </LoginForm>\r\n          \r\n          <LoginImage>\r\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M0 80 Q 40 60 80 80 T 160 80 T 200 80\" stroke=\"#FFFFFF\" strokeWidth=\"5\" fill=\"#87CEFA\" />\r\n              <path d=\"M0 60 Q 40 40 80 60 T 160 60 T 200 60\" stroke=\"#FFFFFF\" strokeWidth=\"5\" fill=\"#ADD8E6\" />\r\n            </svg>\r\n          </LoginImage>\r\n        </LoginBox>\r\n      </LoginContent>\r\n      \r\n      <LoginFooter>\r\n        <FooterContent>\r\n          <FooterLogo>LOGO</FooterLogo>\r\n          <div>© 2010 — 2025</div>\r\n          <FooterLinks>\r\n            <FooterLink href=\"#privacy\">Privacy</FooterLink>\r\n            <FooterLink href=\"#terms\">Terms</FooterLink>\r\n          </FooterLinks>\r\n        </FooterContent>\r\n      </LoginFooter>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport PropTypes from 'prop-types';\r\nconst RegisterContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst RegisterHeader = styled.header`\r\n  padding: 20px;\r\n  text-align: center;\r\n  border-bottom: 1px solid ${props => props.theme.colors.lightGray};\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  \r\n  svg {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst RegisterContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst RegisterBox = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  display: flex;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst RegisterForm = styled.form`\r\n  flex: 1;\r\n  padding: 40px;\r\n  background-color: #f9f9f9;\r\n`;\r\n\r\nconst RegisterImage = styled.div`\r\n  flex: 1;\r\n  background-color: #2196f3;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  img {\r\n    max-width: 80%;\r\n    height: auto;\r\n  }\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst RegisterButton = styled.button`\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n  \r\n  &:hover {\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nconst LoginLink = styled.p`\r\n  text-align: center;\r\n  \r\n  a {\r\n    color: ${props => props.theme.colors.primary};\r\n    font-weight: 500;\r\n    \r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  color: ${props => props.theme.colors.warning};\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst SuccessMessage = styled.p`\r\n  color: ${props => props.theme.colors.success};\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst RegisterFooter = styled.footer`\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border-top: 1px solid ${props => props.theme.colors.lightGray};\r\n`;\r\n\r\nconst FooterContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FooterLogo = styled.div`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FooterLinks = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst FooterLink = styled.a`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  \r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const { register } = useAuth();\r\n  \r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    if (!name || !email || !password || !confirmPassword) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    if (password.length < 6) {\r\n      setError('Password must be at least 6 characters long');\r\n      return;\r\n    }\r\n    \r\n    const result = register(name, email, password);\r\n    \r\n    if (result.success) {\r\n      setSuccess('Registration successful! Redirecting to dashboard...');\r\n      setTimeout(() => {\r\n        navigate('/dashboard');\r\n      }, 2000);\r\n    } else {\r\n      setError(result.message || 'Registration failed');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <RegisterContainer>\r\n      <RegisterHeader>\r\n        <LogoContainer>\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\" fill=\"black\" />\r\n            <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\" fill=\"black\" />\r\n          </svg>\r\n          Task Manager 2.0\r\n        </LogoContainer>\r\n      </RegisterHeader>\r\n      \r\n      <RegisterContent>\r\n        <RegisterBox>\r\n          <RegisterForm onSubmit={handleSubmit}>\r\n            <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Create an Account</h2>\r\n            \r\n            <LoginLink>\r\n              Already have an account? <Link to=\"/\">Log in</Link>\r\n            </LoginLink>\r\n            \r\n            {error && <ErrorMessage>{error}</ErrorMessage>}\r\n            {success && <SuccessMessage>{success}</SuccessMessage>}\r\n            \r\n            <FormGroup>\r\n              <Label htmlFor=\"name\">Full Name</Label>\r\n              <Input \r\n                type=\"text\" \r\n                id=\"name\" \r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label htmlFor=\"email\">E-mail</Label>\r\n              <Input \r\n                type=\"email\" \r\n                id=\"email\" \r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <Input \r\n                type=\"password\" \r\n                id=\"password\" \r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\r\n              <Input \r\n                type=\"password\" \r\n                id=\"confirmPassword\" \r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <RegisterButton type=\"submit\">Register</RegisterButton>\r\n          </RegisterForm>\r\n          \r\n          <RegisterImage>\r\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M0 80 Q 40 60 80 80 T 160 80 T 200 80\" stroke=\"#FFFFFF\" strokeWidth=\"5\" fill=\"#87CEFA\" />\r\n              <path d=\"M0 60 Q 40 40 80 60 T 160 60 T 200 60\" stroke=\"#FFFFFF\" strokeWidth=\"5\" fill=\"#ADD8E6\" />\r\n            </svg>\r\n          </RegisterImage>\r\n        </RegisterBox>\r\n      </RegisterContent>\r\n      \r\n      <RegisterFooter>\r\n        <FooterContent>\r\n          <FooterLogo>LOGO</FooterLogo>\r\n          <div>© 2010 — 2025</div>\r\n          <FooterLinks>\r\n            <FooterLink href=\"#privacy\">Privacy</FooterLink>\r\n            <FooterLink href=\"#terms\">Terms</FooterLink>\r\n          </FooterLinks>\r\n        </FooterContent>\r\n      </RegisterFooter>\r\n    </RegisterContainer>\r\n  );\r\n};\r\nRegister.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n  navigate: PropTypes.func.isRequired,\r\n};\r\nexport default Register;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTask } from '../../contexts/TaskContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst DashboardContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst WelcomeSection = styled.div`\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nconst WelcomeTitle = styled.h1`\r\n  font-size: 2rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst WelcomeSubtitle = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TaskOverviewSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst StatCard = styled.div`\r\n  flex: 1;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StatIcon = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 15px;\r\n  background-color: ${props => props.bgColor || '#e0e0e0'};\r\n`;\r\n\r\nconst StatContent = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StatTitle = styled.p`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst StatValue = styled.p`\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TasksSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst TaskItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n  border-bottom: 1px solid ${props => props.theme.colors.lightGray};\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst TaskEmoji = styled.div`\r\n  font-size: 1.5rem;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst TaskDetails = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst TaskName = styled.p`\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst TaskDueDate = styled.p`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.darkGray};\r\n`;\r\n\r\nconst TaskPriority = styled.div`\r\n  font-weight: 500;\r\n  color: ${props => {\r\n    switch (props.level) {\r\n      case 'high':\r\n        return props.theme.colors.warning;\r\n      case 'medium':\r\n        return props.theme.colors.highPriority;\r\n      default:\r\n        return props.theme.colors.darkGray;\r\n    }\r\n  }};\r\n`;\r\n\r\nconst DeadlinesSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ProductivitySection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ProductivityContainer = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst ProductivityCard = styled.div`\r\n  flex: 1;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ProductivityTitle = styled.p`\r\n  font-weight: 500;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ProductivityValue = styled.p`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ProductivitySubtitle = styled.p`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.darkGray};\r\n`;\r\n\r\nconst Dashboard = () => {\r\n  const { tasks, getTotalTasksCount, getCompletionPercentage, getTotalPoints } = useTask();\r\n  const { user } = useAuth();\r\n  const [completedTasks, setCompletedTasks] = useState(0);\r\n  const [totalPoints, setTotalPoints] = useState(0);\r\n  const [overdueTasks, setOverdueTasks] = useState([]);\r\n  const [upcomingDeadlines, setUpcomingDeadlines] = useState([]);\r\n  const [activeTasks, setActiveTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Here we calculate the number of completed tasks\r\n    const completed = tasks.filter(task => task.completed);\r\n    setCompletedTasks(completed.length);\r\n    \r\n    // Here we calculate the user's total # of points\r\n    setTotalPoints(getTotalPoints());\r\n    \r\n    // Here we calculate the user's overdue tasks\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const overdue = tasks.filter(task => {\r\n      if (task.completed) return false;\r\n      if (!task.dueDate) return false;\r\n      const dueDate = new Date(task.dueDate);\r\n      return dueDate < today;\r\n    });\r\n    setOverdueTasks(overdue);\r\n    \r\n    // Here we get upcoming deadlines, within next 7 days\r\n    const nextWeek = new Date();\r\n    nextWeek.setDate(nextWeek.getDate() + 7);\r\n    \r\n    const upcoming = tasks.filter(task => {\r\n      if (task.completed) return false;\r\n      if (!task.dueDate) return false;\r\n      const dueDate = new Date(task.dueDate);\r\n      return dueDate >= today && dueDate <= nextWeek;\r\n    }).sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\r\n    // Here we show top 3 upcoming deadlines\r\n    setUpcomingDeadlines(upcoming.slice(0, 3)); \r\n    \r\n    // Here we get all active tasks\r\n    const active = tasks.filter(task => !task.completed)\r\n      .sort((a, b) => {\r\n        // Here we sort the tasks by priority first\r\n        const priorityOrder = { high: 0, medium: 1, low: 2 };\r\n        const priorityDiff = priorityOrder[a.priority] - priorityOrder[b.priority];\r\n        if (priorityDiff !== 0) return priorityDiff;\r\n        \r\n        // If there are ties in priorities, then sort by due date if available\r\n        if (a.dueDate && b.dueDate) {\r\n          return new Date(a.dueDate) - new Date(b.dueDate);\r\n        }\r\n        return 0;\r\n      });\r\n    // Now show top 3 active tasks\r\n    setActiveTasks(active.slice(0, 3)); \r\n  }, [tasks, getTotalPoints]);\r\n\r\n  // This is a helper function to get emoji based on task category\r\n  const getTaskEmoji = (category) => {\r\n    switch(category) {\r\n      case 'Work': return '💼';\r\n      case 'Personal': return '😊';\r\n      case 'School': return '📚';\r\n      default: return '📝';\r\n    }\r\n  };\r\n  \r\n  // Here we format the date for display\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'No due date';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n  };\r\n  \r\n  // Here we check if a date is overdue\r\n  const isOverdue = (dateString) => {\r\n    if (!dateString) return false;\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const dueDate = new Date(dateString);\r\n    return dueDate < today;\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <WelcomeSection>\r\n        <WelcomeTitle>Welcome back, {user?.name || 'User'}!</WelcomeTitle>\r\n        <WelcomeSubtitle>Stay organized, prioritize effectively, and maintain momentum through Task Manager 2.0</WelcomeSubtitle>\r\n      </WelcomeSection>\r\n      \r\n      <TaskOverviewSection>\r\n        <SectionTitle>Task Overview</SectionTitle>\r\n        <StatsContainer>\r\n          <StatCard>\r\n            <StatIcon bgColor=\"#e8f5e9\">\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" fill=\"#4CAF50\"/>\r\n              </svg>\r\n            </StatIcon>\r\n            <StatContent>\r\n              <StatTitle>Tasks Completed</StatTitle>\r\n              <StatValue>{completedTasks}</StatValue>\r\n            </StatContent>\r\n          </StatCard>\r\n          \r\n          <StatCard>\r\n            <StatIcon bgColor=\"#e3f2fd\">\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z\" fill=\"#2196F3\"/>\r\n              </svg>\r\n            </StatIcon>\r\n            <StatContent>\r\n              <StatTitle>Points Earned</StatTitle>\r\n              <StatValue>{totalPoints}</StatValue>\r\n            </StatContent>\r\n          </StatCard>\r\n          \r\n          <StatCard>\r\n            <StatIcon bgColor=\"#ffebee\">\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\" fill=\"#F44336\"/>\r\n              </svg>\r\n            </StatIcon>\r\n            <StatContent>\r\n              <StatTitle>Overdue Tasks</StatTitle>\r\n              <StatValue>{overdueTasks.length}</StatValue>\r\n            </StatContent>\r\n          </StatCard>\r\n        </StatsContainer>\r\n      </TaskOverviewSection>\r\n      \r\n      <TasksSection>\r\n        <SectionTitle>Your Tasks</SectionTitle>\r\n        <TaskList>\r\n          {activeTasks.length > 0 ? (\r\n            activeTasks.map(task => (\r\n              <TaskItem key={task.id}>\r\n                <TaskEmoji>{getTaskEmoji(task.category)}</TaskEmoji>\r\n                <TaskDetails>\r\n                  <TaskName>{task.title}</TaskName>\r\n                  <TaskDueDate>{formatDate(task.dueDate)}</TaskDueDate>\r\n                </TaskDetails>\r\n                <TaskPriority level={task.priority}>{task.priority}</TaskPriority>\r\n              </TaskItem>\r\n            ))\r\n          ) : (\r\n            <TaskItem>\r\n              <TaskEmoji><span role=\"img\" aria-label=''>🎉</span></TaskEmoji>\r\n              <TaskDetails>\r\n                <TaskName>No active tasks</TaskName>\r\n                <TaskDueDate>All caught up!</TaskDueDate>\r\n              </TaskDetails>\r\n              <TaskPriority>-</TaskPriority>\r\n            </TaskItem>\r\n          )}\r\n        </TaskList>\r\n      </TasksSection>\r\n      \r\n      <DeadlinesSection>\r\n        <SectionTitle>Upcoming Deadlines</SectionTitle>\r\n        <TaskList>\r\n          {upcomingDeadlines.length > 0 ? (\r\n            upcomingDeadlines.map(task => (\r\n              <TaskItem key={task.id}>\r\n                <TaskEmoji>{isOverdue(task.dueDate) ? '⏰' : '📅'}</TaskEmoji>\r\n                <TaskDetails>\r\n                  <TaskName>{task.title}</TaskName>\r\n                  <TaskDueDate>{formatDate(task.dueDate)}</TaskDueDate>\r\n                </TaskDetails>\r\n                <TaskPriority level={task.priority}>{task.priority}</TaskPriority>\r\n              </TaskItem>\r\n            ))\r\n          ) : (\r\n            <TaskItem>\r\n              <TaskEmoji><span role=\"img\" aria-label=''>🎉</span></TaskEmoji>\r\n              <TaskDetails>\r\n                <TaskName>No upcoming deadlines</TaskName>\r\n                <TaskDueDate>You&apos;re all set!</TaskDueDate>\r\n              </TaskDetails>\r\n              <TaskPriority>-</TaskPriority>\r\n            </TaskItem>\r\n          )}\r\n        </TaskList>\r\n      </DeadlinesSection>\r\n      \r\n      <ProductivitySection>\r\n        <SectionTitle>Your Weekly Productivity</SectionTitle>\r\n        <ProductivityContainer>\r\n          <ProductivityCard>\r\n            <ProductivityTitle>Completed Tasks</ProductivityTitle>\r\n            <ProductivityValue>{completedTasks}</ProductivityValue>\r\n            <ProductivitySubtitle>Out of {getTotalTasksCount()} total tasks</ProductivitySubtitle>\r\n          </ProductivityCard>\r\n          \r\n          <ProductivityCard>\r\n            <ProductivityTitle>Completion Rate</ProductivityTitle>\r\n            <ProductivityValue>{getCompletionPercentage()}%</ProductivityValue>\r\n            <ProductivitySubtitle>Keep up the good work!</ProductivitySubtitle>\r\n          </ProductivityCard>\r\n        </ProductivityContainer>\r\n        \r\n\r\n      </ProductivitySection>\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTask } from '../../contexts/TaskContext';\r\n\r\nconst TasksContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TasksHeader = styled.div`\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nconst TasksTitle = styled.h1`\r\n  font-size: 2rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TasksSubtitle = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  flex: 1;\r\n  padding: 12px 15px;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  max-width: 400px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    max-width: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst AddTaskButton = styled.button`\r\n  padding: 12px 20px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nconst TaskListSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TaskCardsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst TaskCard = styled.div`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  border-left: 4px solid ${props => {\r\n    switch (props.priority) {\r\n      case 'high':\r\n        return props.theme.colors.warning;\r\n      case 'medium':\r\n        return props.theme.colors.highPriority;\r\n      default:\r\n        return props.theme.colors.success;\r\n    }\r\n  }};\r\n`;\r\n\r\nconst TaskCheckbox = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  border: 2px solid ${props => props.completed ? props.theme.colors.success : props.theme.colors.lightGray};\r\n  margin-right: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  background-color: ${props => props.completed ? props.theme.colors.success : 'transparent'};\r\n  \r\n  svg {\r\n    display: ${props => props.completed ? 'block' : 'none'};\r\n  }\r\n`;\r\n\r\nconst TaskContent = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst TaskTitle = styled.h3`\r\n  font-size: 1.2rem;\r\n  margin-bottom: 5px;\r\n  text-decoration: ${props => props.completed ? 'line-through' : 'none'};\r\n  color: ${props => props.completed ? props.theme.colors.darkGray : props.theme.colors.text};\r\n`;\r\n\r\nconst TaskDetails = styled.div`\r\n  display: flex;\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.darkGray};\r\n`;\r\n\r\nconst TaskCategory = styled.span`\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst TaskDueDate = styled.span`\r\n  color: ${props => props.overdue ? props.theme.colors.warning : props.theme.colors.darkGray};\r\n  font-weight: ${props => props.overdue ? 'bold' : 'normal'};\r\n`;\r\n\r\nconst TaskActions = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${props => props.theme.colors.darkGray};\r\n  \r\n  &:hover {\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst AddNewTaskSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst TaskForm = styled.form`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst FormRow = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  background-color: white;\r\n`;\r\n\r\nconst CategoryOptions = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nconst CategoryOption = styled.div`\r\n  padding: 8px 15px;\r\n  border-radius: 20px;\r\n  background-color: ${props => props.selected ? props.theme.colors.primary : props.theme.colors.lightGray};\r\n  color: ${props => props.selected ? 'white' : props.theme.colors.text};\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.selected ? props.theme.colors.primary : '#d0d0d0'};\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  padding: 12px 20px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin: 0 auto;\r\n  \r\n  &:hover {\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nconst FiltersSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst FiltersContainer = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst FilterCard = styled.div`\r\n  flex: 1;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst FilterTitle = styled.h3`\r\n  font-size: 1.2rem;\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  svg {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst FilterOptions = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst FilterOption = styled.div`\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.lightGray};\r\n  }\r\n`;\r\n\r\nconst NoTasksMessage = styled.div`\r\n  text-align: center;\r\n  padding: 30px;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  color: ${props => props.theme.colors.darkGray};\r\n`;\r\n\r\nconst Tasks = () => {\r\n  const { tasks, addTask, deleteTask, toggleTaskCompletion, editTask } = useTask();\r\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\r\n  const [showEditTaskForm, setShowEditTaskForm] = useState(false);\r\n  const [newTask, setNewTask] = useState({\r\n    title: '',\r\n    category: 'Work',\r\n    dueDate: '',\r\n    priority: 'medium'\r\n  });\r\n  const [editingTask, setEditingTask] = useState({\r\n    id: null,\r\n    title: '',\r\n    category: 'Work',\r\n    dueDate: '',\r\n    priority: 'medium'\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filter, setFilter] = useState('all');\r\n  \r\n  const handleAddTaskClick = () => {\r\n    setShowAddTaskForm(true);\r\n    setShowEditTaskForm(false);\r\n  };\r\n  \r\n  const handleEditTaskClick = (task) => {\r\n    setEditingTask({\r\n      id: task.id,\r\n      title: task.title,\r\n      category: task.category,\r\n      dueDate: task.dueDate || '',\r\n      priority: task.priority\r\n    });\r\n    setShowEditTaskForm(true);\r\n    setShowAddTaskForm(false);\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTask({\r\n      ...newTask,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  const handleEditInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditingTask({\r\n      ...editingTask,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  const handleCategorySelect = (category) => {\r\n    setNewTask({\r\n      ...newTask,\r\n      category\r\n    });\r\n  };\r\n  \r\n  const handleEditCategorySelect = (category) => {\r\n    setEditingTask({\r\n      ...editingTask,\r\n      category\r\n    });\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newTask.title) {\r\n      alert('Please enter a task title');\r\n      return;\r\n    }\r\n    \r\n    addTask(newTask);\r\n    \r\n    // Here we reset the form\r\n    setNewTask({\r\n      title: '',\r\n      category: 'Work',\r\n      dueDate: '',\r\n      priority: 'medium'\r\n    });\r\n    \r\n    setShowAddTaskForm(false);\r\n  };\r\n  \r\n  const handleEditSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!editingTask.title) {\r\n      alert('Please enter a task title');\r\n      return;\r\n    }\r\n    \r\n    // Here we extract the id and create an updated task object\r\n    const { id, ...updatedTask } = editingTask;\r\n    \r\n    // Here we call the editTask function from context\r\n    editTask(id, updatedTask);\r\n    \r\n    // Reset form and hide it\r\n    setEditingTask({\r\n      id: null,\r\n      title: '',\r\n      category: 'Work',\r\n      dueDate: '',\r\n      priority: 'medium'\r\n    });\r\n    \r\n    setShowEditTaskForm(false);\r\n  };\r\n  \r\n  const filteredTasks = tasks.filter(task => {\r\n    // Apply search filter\r\n    if (searchTerm && !task.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n      return false;\r\n    }\r\n    \r\n    // Apply completion filter\r\n    if (filter === 'completed' && !task.completed) {\r\n      return false;\r\n    }\r\n    \r\n    if (filter === 'active' && task.completed) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  });\r\n  \r\n  // Check if a date is overdue\r\n  const isOverdue = (dateString) => {\r\n    if (!dateString) return false;\r\n    const dueDate = new Date(dateString);\r\n    const today = new Date();\r\n    return dueDate < today;\r\n  };\r\n  \r\n  return (\r\n    <TasksContainer>\r\n      <TasksHeader>\r\n        <TasksTitle>Task Management Page</TasksTitle>\r\n        <TasksSubtitle>Stay organized and productive with Task Manager 2.0</TasksSubtitle>\r\n      </TasksHeader>\r\n      \r\n      <SearchContainer>\r\n        <SearchInput \r\n          type=\"text\" \r\n          placeholder=\"Search tasks...\" \r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <AddTaskButton onClick={handleAddTaskClick}>Add New Task</AddTaskButton>\r\n      </SearchContainer>\r\n      \r\n      {showAddTaskForm && (\r\n        <AddNewTaskSection>\r\n          <SectionTitle>Add New Task</SectionTitle>\r\n          <TaskForm onSubmit={handleSubmit}>\r\n            <FormRow>\r\n              <FormGroup>\r\n                <Label htmlFor=\"title\">Task Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  id=\"title\" \r\n                  name=\"title\"\r\n                  placeholder=\"Enter task name\" \r\n                  value={newTask.title}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label htmlFor=\"dueDate\">Due Date</Label>\r\n                <Input \r\n                  type=\"date\" \r\n                  id=\"dueDate\" \r\n                  name=\"dueDate\"\r\n                  value={newTask.dueDate}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </FormGroup>\r\n            </FormRow>\r\n            \r\n            <FormRow>\r\n              <FormGroup>\r\n                <Label>Priority</Label>\r\n                <Select \r\n                  name=\"priority\"\r\n                  value={newTask.priority}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"high\">High</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"low\">Low</option>\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Category</Label>\r\n                <CategoryOptions>\r\n                  <CategoryOption \r\n                    selected={newTask.category === 'Work'} \r\n                    onClick={() => handleCategorySelect('Work')}\r\n                  >\r\n                    Work\r\n                  </CategoryOption>\r\n                  <CategoryOption \r\n                    selected={newTask.category === 'Personal'} \r\n                    onClick={() => handleCategorySelect('Personal')}\r\n                  >\r\n                    Personal\r\n                  </CategoryOption>\r\n                  <CategoryOption \r\n                    selected={newTask.category === 'School'} \r\n                    onClick={() => handleCategorySelect('School')}\r\n                  >\r\n                    School\r\n                  </CategoryOption>\r\n                  <CategoryOption \r\n                    selected={newTask.category === 'Other'} \r\n                    onClick={() => handleCategorySelect('Other')}\r\n                  >\r\n                    Other\r\n                  </CategoryOption>\r\n                </CategoryOptions>\r\n              </FormGroup>\r\n            </FormRow>\r\n            \r\n            <SubmitButton type=\"submit\">Add Task</SubmitButton>\r\n          </TaskForm>\r\n        </AddNewTaskSection>\r\n      )}\r\n      \r\n      {showEditTaskForm && (\r\n        <AddNewTaskSection>\r\n          <SectionTitle>Edit Task</SectionTitle>\r\n          <TaskForm onSubmit={handleEditSubmit}>\r\n            <FormRow>\r\n              <FormGroup>\r\n                <Label htmlFor=\"editTitle\">Task Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  id=\"editTitle\" \r\n                  name=\"title\"\r\n                  placeholder=\"Enter task name\" \r\n                  value={editingTask.title}\r\n                  onChange={handleEditInputChange}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label htmlFor=\"editDueDate\">Due Date</Label>\r\n                <Input \r\n                  type=\"date\" \r\n                  id=\"editDueDate\" \r\n                  name=\"dueDate\"\r\n                  value={editingTask.dueDate}\r\n                  onChange={handleEditInputChange}\r\n                />\r\n              </FormGroup>\r\n            </FormRow>\r\n            \r\n            <FormRow>\r\n              <FormGroup>\r\n                <Label>Priority</Label>\r\n                <Select \r\n                  name=\"priority\"\r\n                  value={editingTask.priority}\r\n                  onChange={handleEditInputChange}\r\n                >\r\n                  <option value=\"high\">High</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"low\">Low</option>\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Category</Label>\r\n                <CategoryOptions>\r\n                  <CategoryOption \r\n                    selected={editingTask.category === 'Work'} \r\n                    onClick={() => handleEditCategorySelect('Work')}\r\n                  >\r\n                    Work\r\n                  </CategoryOption>\r\n                  <CategoryOption \r\n                    selected={editingTask.category === 'Personal'} \r\n                    onClick={() => handleEditCategorySelect('Personal')}\r\n                  >\r\n                    Personal\r\n                  </CategoryOption>\r\n                  <CategoryOption \r\n                    selected={editingTask.category === 'School'} \r\n                    onClick={() => handleEditCategorySelect('School')}\r\n                  >\r\n                    School\r\n                  </CategoryOption>\r\n                  <CategoryOption \r\n                    selected={editingTask.category === 'Other'} \r\n                    onClick={() => handleEditCategorySelect('Other')}\r\n                  >\r\n                    Other\r\n                  </CategoryOption>\r\n                </CategoryOptions>\r\n              </FormGroup>\r\n            </FormRow>\r\n            \r\n            <SubmitButton type=\"submit\">Update Task</SubmitButton>\r\n          </TaskForm>\r\n        </AddNewTaskSection>\r\n      )}\r\n      \r\n      <TaskListSection>\r\n        <SectionTitle>Task List</SectionTitle>\r\n        \r\n        {filteredTasks.length > 0 ? (\r\n          <TaskCardsContainer>\r\n            {filteredTasks.map(task => (\r\n              <TaskCard key={task.id} priority={task.priority}>\r\n                <TaskCheckbox \r\n                  completed={task.completed}\r\n                  onClick={() => toggleTaskCompletion(task.id)}\r\n                >\r\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" fill=\"white\"/>\r\n                  </svg>\r\n                </TaskCheckbox>\r\n                \r\n                <TaskContent>\r\n                  <TaskTitle completed={task.completed}>{task.title}</TaskTitle>\r\n                  <TaskDetails>\r\n                    <TaskCategory>{task.category}</TaskCategory>\r\n                    {task.dueDate && (\r\n                      <TaskDueDate overdue={isOverdue(task.dueDate)}>\r\n                        Due: {new Date(task.dueDate).toLocaleDateString()}\r\n                      </TaskDueDate>\r\n                    )}\r\n                  </TaskDetails>\r\n                </TaskContent>\r\n                \r\n                <TaskActions>\r\n                  <ActionButton onClick={() => handleEditTaskClick(task)}>\r\n                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" fill=\"currentColor\"/>\r\n                    </svg>\r\n                  </ActionButton>\r\n                  \r\n                  <ActionButton onClick={() => deleteTask(task.id)}>\r\n                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" fill=\"currentColor\"/>\r\n                    </svg>\r\n                  </ActionButton>\r\n                </TaskActions>\r\n              </TaskCard>\r\n            ))}\r\n          </TaskCardsContainer>\r\n        ) : (\r\n          <NoTasksMessage>\r\n            No tasks found. Add a new task to get started!\r\n          </NoTasksMessage>\r\n        )}\r\n      </TaskListSection>\r\n      \r\n      <FiltersSection>\r\n        <SectionTitle>Filters & Sorting</SectionTitle>\r\n        <FiltersContainer>\r\n          <FilterCard>\r\n            <FilterTitle>\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" fill=\"currentColor\"/>\r\n              </svg>\r\n              Filter By Status\r\n            </FilterTitle>\r\n            <FilterOptions>\r\n              <FilterOption \r\n                style={{fontWeight: filter === 'all' ? 'bold' : 'normal'}}\r\n                onClick={() => setFilter('all')}\r\n              >\r\n                All Tasks\r\n              </FilterOption>\r\n              <FilterOption \r\n                style={{fontWeight: filter === 'active' ? 'bold' : 'normal'}}\r\n                onClick={() => setFilter('active')}\r\n              >\r\n                Active Tasks\r\n              </FilterOption>\r\n              <FilterOption \r\n                style={{fontWeight: filter === 'completed' ? 'bold' : 'normal'}}\r\n                onClick={() => setFilter('completed')}\r\n              >\r\n                Completed Tasks\r\n              </FilterOption>\r\n            </FilterOptions>\r\n          </FilterCard>\r\n        </FiltersContainer>\r\n      </FiltersSection>\r\n    </TasksContainer>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useTask } from '../../contexts/TaskContext';\r\n\r\nconst ProductivityContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst ProductivityHeader = styled.div`\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ProductivityTitle = styled.h1`\r\n  font-size: 2rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ProductivitySubtitle = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SummarySection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst SummaryHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SummarySubtitle = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n`;\r\n\r\nconst ViewDetailsButton = styled.button`\r\n  padding: 8px 15px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst SummaryCards = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst SummaryCard = styled.div`\r\n  flex: 1;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst CardTitle = styled.p`\r\n  font-weight: 500;\r\n  margin-bottom: 15px;\r\n  color: ${props => props.theme.colors.darkGray};\r\n`;\r\n\r\nconst CardValue = styled.p`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst VisualDataSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst VisualDataHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ExportButton = styled.button`\r\n  padding: 8px 15px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst ChartsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst ChartCard = styled.div`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ChartTitle = styled.h3`\r\n  font-size: 1.2rem;\r\n  margin-bottom: 15px;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst ChartSubtitle = styled.p`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ChartContainer = styled.div`\r\n  height: 200px;\r\n  position: relative;\r\n`;\r\n\r\nconst BarChartPlaceholder = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst BarItem = styled.div`\r\n  width: 30px;\r\n  height: ${props => props.height}%;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  border-radius: 4px 4px 0 0;\r\n`;\r\n\r\nconst PieChartPlaceholder = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  background: conic-gradient(\r\n    ${props => props.theme.colors.primary} 0% ${props => props.completionPercentage}%,\r\n    ${props => props.theme.colors.darkGray} ${props => props.completionPercentage}% 100%\r\n  );\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ChartLegend = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 0.8rem;\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst LegendColor = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 2px;\r\n  background-color: ${props => props.color};\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst PointsSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst PointsCard = styled.div`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PointsHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PointsTitle = styled.h3`\r\n  font-size: 1.2rem;\r\n  margin-bottom: 0;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst PointsValue = styled.div`\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: ${props => props.theme.colors.primary};\r\n`;\r\n\r\nconst PointsTable = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst PointsRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid ${props => props.theme.colors.lightGray};\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst PointsLabel = styled.div`\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst PointsAmount = styled.div`\r\n  font-weight: 500;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst Productivity = () => {\r\n  const { \r\n    tasks, \r\n    getTotalTasksCount, \r\n    getCompletionPercentage, \r\n    getTotalPoints \r\n  } = useTask();\r\n  \r\n  const [totalTasks, setTotalTasks] = useState(0);\r\n  const [completionPercentage, setCompletionPercentage] = useState(0);\r\n  const [totalPoints, setTotalPoints] = useState(0);\r\n  const [streak, setStreak] = useState(0);\r\n  \r\n  // Here we calculate the total # of subtasks\r\n  const getTotalSubtasksCount = () => {\r\n    return tasks.reduce((total, task) => total + task.subtasks.length, 0);\r\n  };\r\n  \r\n  // Here we calculate the user's streak \r\n  const calculateStreak = useCallback(() => {\r\n    const completedTasks = tasks.filter(task => task.completed).length;\r\n    return Math.min(Math.floor(completedTasks / 2), 14); // Cap at 14 days for demo\r\n  }, [tasks]);\r\n  \r\n  // Here we update stats whenever tasks change\r\n  useEffect(() => {\r\n    setTotalTasks(getTotalTasksCount());\r\n    setCompletionPercentage(getCompletionPercentage());\r\n    setTotalPoints(getTotalPoints());\r\n    setStreak(calculateStreak());\r\n  }, [tasks, getTotalTasksCount, getCompletionPercentage, getTotalPoints, calculateStreak]);\r\n  \r\n  // Here we get tasks by category for the pie chart\r\n  const getTasksByCategory = () => {\r\n    const categories = {};\r\n    tasks.forEach(task => {\r\n      if (!categories[task.category]) {\r\n        categories[task.category] = 0;\r\n      }\r\n      categories[task.category]++;\r\n    });\r\n    return categories;\r\n  };\r\n  \r\n  const tasksByCategory = getTasksByCategory();\r\n  \r\n  return (\r\n    <ProductivityContainer>\r\n      <ProductivityHeader>\r\n        <ProductivityTitle>Productivity Tracking</ProductivityTitle>\r\n        <ProductivitySubtitle>Check your progress and performance</ProductivitySubtitle>\r\n      </ProductivityHeader>\r\n      \r\n      <SummarySection>\r\n        <SectionTitle>Summary Cards</SectionTitle>\r\n        <SummaryHeader>\r\n          <SummarySubtitle>Get quick insights</SummarySubtitle>\r\n          <ViewDetailsButton>View Details</ViewDetailsButton>\r\n        </SummaryHeader>\r\n        \r\n        <SummaryCards>\r\n          <SummaryCard>\r\n            <CardTitle>Tasks Completed</CardTitle>\r\n            <CardValue>{completionPercentage}%</CardValue>\r\n          </SummaryCard>\r\n          \r\n          <SummaryCard>\r\n            <CardTitle>Streak</CardTitle>\r\n            <CardValue>{streak} Days</CardValue>\r\n          </SummaryCard>\r\n          \r\n          <SummaryCard>\r\n            <CardTitle>Total Tasks</CardTitle>\r\n            <CardValue>{totalTasks}</CardValue>\r\n          </SummaryCard>\r\n        </SummaryCards>\r\n      </SummarySection>\r\n      \r\n      <PointsSection>\r\n        <SectionTitle>Points System</SectionTitle>\r\n        <PointsCard>\r\n          <PointsHeader>\r\n            <PointsTitle>Total Points Earned</PointsTitle>\r\n            <PointsValue>{totalPoints} pts</PointsValue>\r\n          </PointsHeader>\r\n          \r\n          <PointsTable>\r\n            <PointsRow>\r\n              <PointsLabel>High Priority Tasks</PointsLabel>\r\n              <PointsAmount>10 points each</PointsAmount>\r\n            </PointsRow>\r\n            <PointsRow>\r\n              <PointsLabel>Medium Priority Tasks</PointsLabel>\r\n              <PointsAmount>5 points each</PointsAmount>\r\n            </PointsRow>\r\n            <PointsRow>\r\n              <PointsLabel>Low Priority Tasks</PointsLabel>\r\n              <PointsAmount>3 points each</PointsAmount>\r\n            </PointsRow>\r\n            <PointsRow>\r\n              <PointsLabel>Subtasks Completed</PointsLabel>\r\n              <PointsAmount>{getTotalSubtasksCount()} subtasks</PointsAmount>\r\n            </PointsRow>\r\n          </PointsTable>\r\n        </PointsCard>\r\n      </PointsSection>\r\n      \r\n      <VisualDataSection>\r\n        <VisualDataHeader>\r\n          <SectionTitle>Visual Data</SectionTitle>\r\n          <ExportButton>Export</ExportButton>\r\n        </VisualDataHeader>\r\n        \r\n        <ChartsContainer>\r\n          <ChartCard>\r\n            <ChartTitle>Task Completion Rate</ChartTitle>\r\n            <ChartSubtitle>Overall progress</ChartSubtitle>\r\n            <ChartContainer>\r\n              <PieChartPlaceholder completionPercentage={completionPercentage} />\r\n            </ChartContainer>\r\n            <ChartLegend>\r\n              <LegendItem>\r\n                <LegendColor color={props => props.theme.colors.primary} />\r\n                <span>Completed ({completionPercentage}%)</span>\r\n              </LegendItem>\r\n              <LegendItem>\r\n                <LegendColor color={props => props.theme.colors.darkGray} />\r\n                <span>Remaining ({100 - completionPercentage}%)</span>\r\n              </LegendItem>\r\n            </ChartLegend>\r\n          </ChartCard>\r\n          \r\n          <ChartCard>\r\n            <ChartTitle>Points Earned</ChartTitle>\r\n            <ChartSubtitle>Total: {totalPoints} points</ChartSubtitle>\r\n            <ChartContainer>\r\n              <BarChartPlaceholder>\r\n                <BarItem height={60} />\r\n                <BarItem height={40} />\r\n                <BarItem height={70} />\r\n                <BarItem height={50} />\r\n                <BarItem height={80} />\r\n                <BarItem height={45} />\r\n                <BarItem height={65} />\r\n              </BarChartPlaceholder>\r\n            </ChartContainer>\r\n            <ChartLegend>Last 7 days</ChartLegend>\r\n          </ChartCard>\r\n        </ChartsContainer>\r\n        \r\n        <ChartCard>\r\n          <ChartTitle>Tasks Breakdown</ChartTitle>\r\n          <ChartSubtitle>By category</ChartSubtitle>\r\n          <ChartContainer>\r\n            <PieChartPlaceholder completionPercentage={70} />\r\n          </ChartContainer>\r\n          <ChartLegend>\r\n            {Object.keys(tasksByCategory).map((category, index) => (\r\n              <LegendItem key={index}>\r\n                <LegendColor color={index === 0 ? props => props.theme.colors.primary : \r\n                              index === 1 ? props => props.theme.colors.warning : \r\n                              props => props.theme.colors.success} />\r\n                <span>{category} ({tasksByCategory[category]})</span>\r\n              </LegendItem>\r\n            ))}\r\n          </ChartLegend>\r\n        </ChartCard>\r\n      </VisualDataSection>\r\n    </ProductivityContainer>\r\n  );\r\n};\r\nProductivity.propTypes = {\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      category: PropTypes.string.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n      subtasks: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.number.isRequired,\r\n          title: PropTypes.string.isRequired,\r\n          completed: PropTypes.bool.isRequired,\r\n        })\r\n      ),\r\n    })\r\n  ).isRequired,\r\n  getTotalTasksCount: PropTypes.func.isRequired,\r\n  getCompletionPercentage: PropTypes.func.isRequired,\r\n  getTotalPoints: PropTypes.func.isRequired,\r\n  theme: PropTypes.shape({\r\n    colors: PropTypes.shape({\r\n      primary: PropTypes.string.isRequired,\r\n      darkGray: PropTypes.string.isRequired,\r\n      lightGray: PropTypes.string.isRequired,\r\n      cardBackground: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      warning: PropTypes.string.isRequired,\r\n      success: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    breakpoints: PropTypes.shape({\r\n      tablet: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Productivity;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport PropTypes from 'prop-types';\r\nconst SettingsContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst ProfileSection = styled.div`\r\n  background-color: #4b6455;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  margin-bottom: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: white;\r\n`;\r\n\r\nconst ProfileInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileAvatar = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProfileDetails = styled.div``;\r\n\r\nconst ProfileName = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ProfileEmail = styled.p`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ProfileActions = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ProfileButton = styled.button`\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  background-color: ${props => props.primary ? 'transparent' : 'black'};\r\n  color: white;\r\n  border: ${props => props.primary ? '1px solid white' : 'none'};\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.primary ? 'rgba(255, 255, 255, 0.1)' : '#333'};\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ThemesSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ThemeDescription = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst ThemeOptions = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst ThemeCard = styled.div`\r\n  flex: 1;\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ThemeIcon = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 15px;\r\n  background-color: ${props => props.bgColor || '#e0e0e0'};\r\n`;\r\n\r\nconst ThemeDetails = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst ThemeTitle = styled.h3`\r\n  font-size: 1.2rem;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ThemeSubtitle = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst CustomThemeSection = styled.div`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ThemeSettingsSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ColorPickersContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst ColorPickerGroup = styled.div`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ColorPickerLabel = styled.p`\r\n  font-weight: 500;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ColorPickerDescription = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  font-size: 0.9rem;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ColorPickerInput = styled.input`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  background-color: ${props => props.primary ? props.theme.colors.primary : 'transparent'};\r\n  color: ${props => props.primary ? 'white' : props.theme.colors.text};\r\n  border: ${props => props.primary ? 'none' : `1px solid ${props.theme.colors.lightGray}`};\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.primary ? '#333' : props.theme.colors.lightGray};\r\n  }\r\n`;\r\n\r\nconst Settings = () => {\r\n  const [primaryColor, setPrimaryColor] = useState('#000000');\r\n  const [secondaryColor, setSecondaryColor] = useState('#ffffff');\r\n  const { user } = useAuth();\r\n  \r\n  return (\r\n    <SettingsContainer>\r\n      <ProfileSection>\r\n        <ProfileInfo>\r\n          <ProfileAvatar>\r\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" fill=\"#757575\"/>\r\n            </svg>\r\n          </ProfileAvatar>\r\n          <ProfileDetails>\r\n            <ProfileName>{user?.name || 'User'}</ProfileName>\r\n            <ProfileEmail>{user?.email || 'Manage your preferences'}</ProfileEmail>\r\n          </ProfileDetails>\r\n        </ProfileInfo>\r\n        <ProfileActions>\r\n          <ProfileButton primary>Upload</ProfileButton>\r\n          <ProfileButton>Edit Profile</ProfileButton>\r\n        </ProfileActions>\r\n      </ProfileSection>\r\n      \r\n      <ThemesSection>\r\n        <SectionTitle>Themes & Customization</SectionTitle>\r\n        <ThemeDescription>Customize the look and feel of Task Manager 2.0</ThemeDescription>\r\n        \r\n        <ThemeOptions>\r\n          <ThemeCard>\r\n            <ThemeIcon bgColor=\"#1a237e\">\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zm-2 5.79V18h-3.52L12 20.48 9.52 18H6v-3.52L3.52 12 6 9.52V6h3.52L12 3.52 14.48 6H18v3.52L20.48 12 18 14.48z\" fill=\"white\"/>\r\n                <path d=\"M12 6.5c-3.03 0-5.5 2.47-5.5 5.5s2.47 5.5 5.5 5.5 5.5-2.47 5.5-5.5-2.47-5.5-5.5-5.5zm0 10c-2.48 0-4.5-2.02-4.5-4.5S9.52 7.5 12 7.5s4.5 2.02 4.5 4.5-2.02 4.5-4.5 4.5z\" fill=\"white\"/>\r\n              </svg>\r\n            </ThemeIcon>\r\n            <ThemeDetails>\r\n              <ThemeTitle>Dark Mode</ThemeTitle>\r\n              <ThemeSubtitle>Switch to a darker theme for night viewing and reduced eye strain</ThemeSubtitle>\r\n            </ThemeDetails>\r\n          </ThemeCard>\r\n          \r\n          <ThemeCard>\r\n            <ThemeIcon bgColor=\"#ffeb3b\">\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zm-2 5.79V18h-3.52L12 20.48 9.52 18H6v-3.52L3.52 12 6 9.52V6h3.52L12 3.52 14.48 6H18v3.52L20.48 12 18 14.48z\" fill=\"#333\"/>\r\n                <path d=\"M12 6.5c-3.03 0-5.5 2.47-5.5 5.5s2.47 5.5 5.5 5.5 5.5-2.47 5.5-5.5-2.47-5.5-5.5-5.5zm0 10c-2.48 0-4.5-2.02-4.5-4.5S9.52 7.5 12 7.5s4.5 2.02 4.5 4.5-2.02 4.5-4.5 4.5z\" fill=\"#333\"/>\r\n              </svg>\r\n            </ThemeIcon>\r\n            <ThemeDetails>\r\n              <ThemeTitle>Light Mode</ThemeTitle>\r\n              <ThemeSubtitle>Use the standard theme for ease of reading</ThemeSubtitle>\r\n            </ThemeDetails>\r\n          </ThemeCard>\r\n        </ThemeOptions>\r\n        \r\n        <CustomThemeSection>\r\n          <ThemeTitle>Custom Theme Selection</ThemeTitle>\r\n          <ThemeSubtitle>Choose colors and fonts that suit your preferences</ThemeSubtitle>\r\n        </CustomThemeSection>\r\n      </ThemesSection>\r\n      \r\n      <ThemeSettingsSection>\r\n        <SectionTitle>Theme Settings</SectionTitle>\r\n        <ThemeDescription>Customize your theme colors</ThemeDescription>\r\n        \r\n        <ColorPickersContainer>\r\n          <ColorPickerGroup>\r\n            <ColorPickerLabel>Primary Color</ColorPickerLabel>\r\n            <ColorPickerDescription>Used for buttons and important elements</ColorPickerDescription>\r\n            <ColorPickerInput \r\n              type=\"color\" \r\n              value={primaryColor} \r\n              onChange={(e) => setPrimaryColor(e.target.value)} \r\n            />\r\n          </ColorPickerGroup>\r\n          \r\n          <ColorPickerGroup>\r\n            <ColorPickerLabel>Secondary Color</ColorPickerLabel>\r\n            <ColorPickerDescription>Used for backgrounds and subtle elements</ColorPickerDescription>\r\n            <ColorPickerInput \r\n              type=\"color\" \r\n              value={secondaryColor} \r\n              onChange={(e) => setSecondaryColor(e.target.value)} \r\n            />\r\n          </ColorPickerGroup>\r\n        </ColorPickersContainer>\r\n        \r\n        <ButtonsContainer>\r\n          <Button>Reset to Defaults</Button>\r\n          <Button primary>Save Theme</Button>\r\n        </ButtonsContainer>\r\n      </ThemeSettingsSection>\r\n    </SettingsContainer>\r\n  );\r\n};\r\nSettings.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n  }),\r\n};\r\n\r\nSettings.defaultProps = {\r\n  user: null,\r\n};\r\nexport default Settings;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst AccountContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst ProfileSection = styled.div`\r\n  background-color: #4b6455;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  margin-bottom: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: white;\r\n`;\r\n\r\nconst ProfileInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileAvatar = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProfileDetails = styled.div``;\r\n\r\nconst ProfileName = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ProfileEmail = styled.p`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ProfileDescription = styled.p`\r\n  font-size: 0.9rem;\r\n  color: rgba(255, 255, 255, 0.9);\r\n`;\r\n\r\nconst ProfileActions = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ProfileButton = styled.button`\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  background-color: ${props => props.primary ? 'transparent' : 'black'};\r\n  color: white;\r\n  border: ${props => props.primary ? '1px solid white' : 'none'};\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.primary ? 'rgba(255, 255, 255, 0.1)' : '#333'};\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 1.8rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SectionDescription = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst AccountSettingsSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst SettingsForm = styled.form`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst FormLabel = styled.label`\r\n  display: block;\r\n  font-weight: 500;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst RadioGroup = styled.div`\r\n  display: flex;\r\n  gap: 30px;\r\n`;\r\n\r\nconst RadioOption = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst RadioInput = styled.input`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst RadioLabel = styled.label`\r\n  font-weight: normal;\r\n`;\r\n\r\nconst RemindersDescription = styled.p`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst SaveButton = styled.button`\r\n  padding: 12px 25px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nconst DangerZoneSection = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst DangerZoneContainer = styled.div`\r\n  background-color: ${props => props.theme.colors.cardBackground};\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst DangerZoneHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DangerIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background-color: #fff8e1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst DangerTitle = styled.h3`\r\n  font-size: 1.3rem;\r\n  color: ${props => props.theme.colors.warning};\r\n`;\r\n\r\nconst DangerDescription = styled.p`\r\n  color: ${props => props.theme.colors.darkGray};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DangerActions = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n`;\r\n\r\nconst CancelButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: transparent;\r\n  color: ${props => props.theme.colors.text};\r\n  border: 1px solid ${props => props.theme.colors.lightGray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.lightGray};\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  padding: 10px 20px;\r\n  background-color: ${props => props.theme.colors.warning};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #d32f2f;\r\n  }\r\n`;\r\n\r\nconst Account = () => {\r\n  const [emailReminders, setEmailReminders] = useState('enabled');\r\n  const { user } = useAuth();\r\n  \r\n  return (\r\n    <AccountContainer>\r\n      <ProfileSection>\r\n        <ProfileInfo>\r\n          <ProfileAvatar>\r\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" fill=\"#757575\"/>\r\n            </svg>\r\n          </ProfileAvatar>\r\n          <ProfileDetails>\r\n            <ProfileName>{user?.name || 'User'}</ProfileName>\r\n            <ProfileEmail>{user?.email || 'Premium User'}</ProfileEmail>\r\n            <ProfileDescription>Manage your account and profile settings here.</ProfileDescription>\r\n          </ProfileDetails>\r\n        </ProfileInfo>\r\n        <ProfileActions>\r\n          <ProfileButton primary>Change Password</ProfileButton>\r\n          <ProfileButton>Edit Profile</ProfileButton>\r\n        </ProfileActions>\r\n      </ProfileSection>\r\n      \r\n      <AccountSettingsSection>\r\n        <SectionTitle>Account Settings</SectionTitle>\r\n        <SectionDescription>Update your account settings here.</SectionDescription>\r\n        \r\n        <SettingsForm>\r\n          <FormGroup>\r\n            <FormLabel htmlFor=\"newPassword\">New Password</FormLabel>\r\n            <FormInput type=\"password\" id=\"newPassword\" placeholder=\"Enter new password\" />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <FormLabel htmlFor=\"confirmPassword\">Confirm Password</FormLabel>\r\n            <FormInput type=\"password\" id=\"confirmPassword\" placeholder=\"Confirm new password\" />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <FormLabel>Email Reminders</FormLabel>\r\n            <RadioGroup>\r\n              <RadioOption>\r\n                <RadioInput \r\n                  type=\"radio\" \r\n                  id=\"enabled\" \r\n                  name=\"emailReminders\" \r\n                  value=\"enabled\" \r\n                  checked={emailReminders === 'enabled'}\r\n                  onChange={() => setEmailReminders('enabled')}\r\n                />\r\n                <RadioLabel htmlFor=\"enabled\">Enabled</RadioLabel>\r\n              </RadioOption>\r\n              \r\n              <RadioOption>\r\n                <RadioInput \r\n                  type=\"radio\" \r\n                  id=\"disabled\" \r\n                  name=\"emailReminders\" \r\n                  value=\"disabled\" \r\n                  checked={emailReminders === 'disabled'}\r\n                  onChange={() => setEmailReminders('disabled')}\r\n                />\r\n                <RadioLabel htmlFor=\"disabled\">Disabled</RadioLabel>\r\n              </RadioOption>\r\n            </RadioGroup>\r\n            <RemindersDescription>Receive email reminders for tasks</RemindersDescription>\r\n          </FormGroup>\r\n          \r\n          <SaveButton type=\"button\">Save Changes</SaveButton>\r\n        </SettingsForm>\r\n      </AccountSettingsSection>\r\n      \r\n      <DangerZoneSection>\r\n        <SectionTitle>Danger Zone</SectionTitle>\r\n        <DangerZoneContainer>\r\n          <DangerZoneHeader>\r\n            <DangerIcon>\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" fill=\"#FFC107\"/>\r\n              </svg>\r\n            </DangerIcon>\r\n            <DangerTitle>Delete Account</DangerTitle>\r\n          </DangerZoneHeader>\r\n          \r\n          <DangerDescription>This action cannot be undone!</DangerDescription>\r\n          \r\n          <DangerActions>\r\n            <CancelButton>Cancel</CancelButton>\r\n            <DeleteButton>Delete My Account</DeleteButton>\r\n          </DangerActions>\r\n        </DangerZoneContainer>\r\n      </DangerZoneSection>\r\n    </AccountContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\r\nimport GlobalStyles from './styles/GlobalStyles';\r\n\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { TaskProvider } from './contexts/TaskContext';\r\nimport { ThemeProvider, useTheme } from './contexts/ThemeContext';\r\n\r\nimport Navbar from './components/layout/Navbar';\r\nimport Navigation from './components/layout/Navigation';\r\nimport Footer from './components/layout/Footer';\r\n\r\nimport Login from './components/pages/Login';\r\nimport Register from './components/pages/Register';\r\nimport Dashboard from './components/pages/Dashboard';\r\nimport Tasks from './components/pages/Tasks';\r\nimport Productivity from './components/pages/Productivity';\r\nimport Settings from './components/pages/Settings';\r\nimport Account from './components/pages/Account';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const isAuthenticated = localStorage.getItem('taskManagerUser') !== null;\r\n  \r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n  \r\n  return children;\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  children: PropTypes.node.isRequired, \r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <AppWithTheme />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nfunction AppWithTheme() {\r\n  const { theme } = useTheme();\r\n  \r\n  return (\r\n    <StyledThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <AuthProvider>\r\n        <TaskProvider>\r\n          <Router>\r\n            <div className=\"app\">\r\n              <Navbar />\r\n              <main className=\"main-content\">\r\n                <Routes>\r\n                  <Route path=\"/\" element={<Login />} />\r\n                  <Route path=\"/register\" element={<Register />} />\r\n                  <Route path=\"/dashboard\" element={\r\n                    <ProtectedRoute>\r\n                      <Dashboard />\r\n                    </ProtectedRoute>\r\n                  } />\r\n                  <Route path=\"/tasks\" element={\r\n                    <ProtectedRoute>\r\n                      <Tasks />\r\n                    </ProtectedRoute>\r\n                  } />\r\n                  <Route path=\"/productivity\" element={\r\n                    <ProtectedRoute>\r\n                      <Productivity />\r\n                    </ProtectedRoute>\r\n                  } />\r\n                  <Route path=\"/settings\" element={\r\n                    <ProtectedRoute>\r\n                      <Settings />\r\n                    </ProtectedRoute>\r\n                  } />\r\n                  <Route path=\"/account\" element={\r\n                    <ProtectedRoute>\r\n                      <Account />\r\n                    </ProtectedRoute>\r\n                  } />\r\n                </Routes>\r\n              </main>\r\n              <Navigation />\r\n              <Footer />\r\n            </div>\r\n          </Router>\r\n        </TaskProvider>\r\n      </AuthProvider>\r\n    </StyledThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; // Import ReactDOM from 'react-dom' directly\r\nimport './index.css'; // Assuming you have this file\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals'; // Assuming you have this file\r\n\r\n// Use ReactDOM.render instead of createRoot\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals() ;\r\n"],"sourceRoot":""}