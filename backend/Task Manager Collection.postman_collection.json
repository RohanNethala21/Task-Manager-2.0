{
	"info": {
		"_postman_id": "1920a9bc-ff82-4917-aeb1-0ca7d6700a24",
		"name": "Task Manager Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39609644"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Data contains the expected value\", function () {\r",
									"    const responseData = pm.response.json().data;\r",
									"    pm.expect(responseData[0].user_id).to.equal(2);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/users?user_id=2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User: User Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/users?user_id=900",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "900"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_email\": \"lasttest@email.com\",\r\n    \"user_password\": \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/users",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User: Missing Field",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_email\": \"nogood@email.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/users",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_email\": \"lasttest@email.com\",\r\n    \"user_password\": \"password1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/users/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit User: Missing Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_email\": \"lasttest@email.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/users/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit User: User Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_email\": \"lasttest@email.com\",\r\n    \"user_password\": \"password1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/users/500",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"500"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/users/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User: User Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/users/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workspace",
			"item": [
				{
					"name": "Get Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Data contains the expected value\", function () {\r",
									"    const responseData = pm.response.json().data;\r",
									"    pm.expect(responseData[0].workspace_id).to.equal(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/workspaces?workspace_id=1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces"
							],
							"query": [
								{
									"key": "workspace_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workspace: Workspace Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/workspaces?workspace_id=900",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces"
							],
							"query": [
								{
									"key": "workspace_id",
									"value": "900"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_id\": 2,\r\n    \"workspace_name\": \"Test Workspace 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/workspaces",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Workspace: Missing Field",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workspace_name\": \"Test Workspace 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/workspaces",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_id\": 2,\r\n    \"workspace_name\": \"Professional Test Workspace 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/workspaces/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Workspace: Missing Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workspace_name\": \"Professional Test Workspace 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/workspaces/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Workspace: User Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_id\": 2,\r\n    \"workspace_name\": \"Professional Test Workspace 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/workspaces/500",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces",
								"500"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/workspaces/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workspace: Workspace Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/workspaces/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"workspaces",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Data contains the expected value\", function () {\r",
									"    const responseData = pm.response.json().data;\r",
									"    pm.expect(responseData[0].task_id).to.equal(2);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/tasks?task_id=2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task: Task Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/tasks?task_id=500",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "500"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workspace_id\": 1,\r\n    \"task_name\": \"Review Code\",\r\n    \"task_details\": \"Peer review for last sprint's commits.\",\r\n    \"task_due_date\": \"2025-04-28\",\r\n    \"task_status\": \"completed\",\r\n    \"task_points\": 2,\r\n    \"task_priority\": \"low\",\r\n    \"task_parent\": null\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/tasks",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User: Missing Field",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workspace_id\": 1,\r\n    \"task_name\": \"Review Code\",\r\n    \"task_details\": \"Peer review for last sprint's commits.\",\r\n    \"task_due_date\": \"2025-04-28\",\r\n    \"task_status\": \"completed\",\r\n    \"task_points\": 2,\r\n    \"task_priority\": \"low\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/users",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workspace_id\": 1,\r\n    \"task_name\": \"Review Code\",\r\n    \"task_details\": \"Peer review for last sprint's commits.\",\r\n    \"task_due_date\": \"2025-04-28\",\r\n    \"task_status\": \"completed\",\r\n    \"task_points\": 2,\r\n    \"task_priority\": \"medium\",\r\n    \"task_parent\": null\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/tasks/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Task: Missing Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workspace_id\": 1,\r\n    \"task_name\": \"Review Code\",\r\n    \"task_details\": \"Peer review for last sprint's commits.\",\r\n    \"task_due_date\": \"2025-04-28\",\r\n    \"task_points\": 2,\r\n    \"task_priority\": \"medium\",\r\n    \"task_parent\": null\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/tasks/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Task: Task Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"workspace_id\": 1,\r\n    \"task_name\": \"Review Code\",\r\n    \"task_details\": \"Peer review for last sprint's commits.\",\r\n    \"task_due_date\": \"2025-04-28\",\r\n    \"task_status\": \"completed\",\r\n    \"task_points\": 2,\r\n    \"task_priority\": \"medium\",\r\n    \"task_parent\": null\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/tasks/500",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"500"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is true\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/tasks/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task: Task Does Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Good is false\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  pm.expect(responseData.good).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/tasks/4",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"4"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}